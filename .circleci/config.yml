# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
      
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        enviornment:
            RAILS_ENV: test
      - image: circleci/mongo:3.6.6
      
    working_directory: ~/davedkg-rails-template
    
    steps: 
      - checkout 

      # bundle install
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-
      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # yarn install
      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
            - yarn-
      - run:
          name: yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            
      # start code climate reporter
      - run:
          name: Start Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
    
      # run tests
      - run:
          name: rspec
          command: |
              mkdir /tmp/test-results
              TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
              bundle exec rspec --format progress \
                                --format RspecJunitFormatter \
                                --out /tmp/test-results/rspec.xml \
                                $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
          
      - run:
          name: Upload Code Climate report
          command: |
              ./cc-test-reporter after-build --coverage-input-type simplecov
