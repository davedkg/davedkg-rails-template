# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  rspec:

    docker:
      - image: circleci/ruby:2.6.8-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: db_user
          RAILS_ENV: test
          REDIS_URL: redis://127.0.0.1:6379/0
          TEST_REDIS_PORT: 6379
      - image: circleci/postgres:10-postgis-ram
        environment:
          POSTGRES_DB: davedkg_template_test
          POSTGRES_PASSWORD: ""
          POSTGRES_USER: db_user
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: cimg/redis:6.2.6

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # yarn install
      - restore_cache:
          keys:
            - v1-yarn-cache--{{ checksum "yarn.lock" }}
            - v1-yarn-cache-
      - run:
          name: Running yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: v1-yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # install code climate test reporter
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # Wait for DB
      - run:
          name: Wait for DB to Boot
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # setup database
      - run:
          name: Running rake db:schema:load db:seed
          command: bundle exec rake db:schema:load db:seed

      # compile assets
      - restore_cache:
          keys:
            - v1-asset-cache-{{ arch }}-{{ .Branch }}
            - v1-asset-cache-
      - run: bundle exec rake assets:precompile
      - save_cache:
          key: v1-asset-cache-{{ arch }}-{{ .Branch }}-{{ epoch }}
          paths:
            - public/assets
            - public/packs
            - public/packs-test
            - tmp/cache/assets/sprockets

      # run rspec
      - run:
          name: Running rspec
          command: |
              mkdir /tmp/test-results
              ./cc-test-reporter before-build
              TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
              bundle exec rspec --format progress \
                                --format RspecJunitFormatter \
                                --out /tmp/test-results/rspec.xml \
                                $TEST_FILES

      - run:
          name: Run Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  upload-codeclimate-coverage:
      docker:
        - image: circleci/ruby:2.5.1-stretch-node
      working_directory: ~/repo

      steps:
        - attach_workspace:
            at: ~/repo
        - run:
            name: Install Code Climate Test Reporter
            command: |
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
        - run:
            name: Upload Code Climate Report
            command: |
              ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

  reek:
    docker:
      - image: circleci/ruby:2.6.8
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: bundle exec reek -c .reek.yml

  rubocop:
    docker:
      - image: circleci/ruby:2.6.8
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: bundle exec rubocop -c .rubocop.yml

  brakeman:
    docker:
      - image: circleci/ruby:2.6.8
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: bundle exec brakeman

  eslint:
    docker:
      - image: circleci/ruby:2.6.8-node
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # yarn install
      - restore_cache:
          keys:
            - v1-yarn-cache--{{ checksum "yarn.lock" }}
            - v1-yarn-cache-
      - run:
          name: Running yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: v1-yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: bundle exec rake eslint

  scss-lint:
    docker:
      - image: circleci/ruby:2.6.8
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: bundle exec scss-lint -c .scss-lint.yml

  fasterer:
    docker:
      - image: circleci/ruby:2.6.8
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - v1-bundle-cache-{{ checksum "Gemfile.lock" }}
            - v1-bundle-cache-
      - run:
          name: Running bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: v1-bundle-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: bundle exec fasterer

workflows:
  version: 2
  test:
    jobs:
      - rspec
      - rubocop
      - reek
      - brakeman
      - eslint
      - scss-lint
      - fasterer
      - upload-codeclimate-coverage:
          requires:
            - rspec