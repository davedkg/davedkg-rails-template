# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:

    docker:
      - image: circleci/ruby:2.6.4-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: db_user
          RAILS_ENV: test
      - image: circleci/postgres:10-postgis-ram
        environment:
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: ""
          POSTGRES_USER: db_user

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle install
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-
      - run:
          name: Running bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development production
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # yarn install
      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
            - yarn-
      - run:
          name: Running yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # compile assets
      - restore_cache:
          keys:
            - v1-asset-cache-{{ arch }}-{{ .Branch }}
            - v1-asset-cache-
      - run: bundle exec rake assets:precompile
      - save_cache:
          key: v1-asset-cache-{{ arch }}-{{ .Branch }}-{{ epoch }}
          paths:
            - public/assets
            - tmp/cache/assets/sprockets

      # wait for db
      - run:
          name: Wait for DB to Boot
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # setup database
      - run:
          name: Running rake db:schema:load db:seed
          command: bundle exec rake db:schema:load db:seed

      # start code climate reporter
      - run:
          name: Starting Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build

      # run tests
      - run:
          name: Running rspec
          environment:
              RAILS_ENV: test
          command: |
              mkdir /tmp/test-results
              TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
              bundle exec rspec --format progress \
                                --format RspecJunitFormatter \
                                --out /tmp/test-results/rspec.xml \
                                $TEST_FILES
      # save test results
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - run:
          name: Uploading Code Climate Test Report
          command: |
              ./cc-test-reporter after-build --coverage-input-type simplecov